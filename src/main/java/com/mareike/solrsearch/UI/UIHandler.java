package com.mareike.solrsearch.UI;

import com.mareike.solrsearch.DirectoryChooser.DirectoryChooser;
import com.mareike.solrsearch.DirectoryChooser.MultiSelectionTree;
import com.mareike.solrsearch.SolrInstance;
import org.apache.solr.client.solrj.SolrServerException;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author mareike
 */
public class UIHandler extends javax.swing.JFrame {


    private SolrInstance solr;
    /**
     * Creates new form UIHandler
     */
    public UIHandler() {

        try {
            solr = new SolrInstance("http://localhost:8983/solr", "localDocs4");
        }catch(IOException io){
            System.out.println("IOException: " + io.getMessage());
        }catch(SolrServerException serv){
            System.out.println("SolrServerException: " + serv.getMessage());
        }catch(Exception e){
            System.out.println(e.getClass().getName() + ": " + e.getMessage());
        }
        DirectoryChooser dir = new DirectoryChooser(solr.getIndexer(), "C:/Users/mareike/Documents/Studium");
        initComponents(dir.getTree());
        //createActionListeners(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents(MultiSelectionTree tree) {

        jLabel1 = new javax.swing.JLabel();
        PlaceholderRight = new javax.swing.JPanel();
        PlaceholderLeft = new javax.swing.JPanel();
        PanelBottom = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        DirectoryPane = new javax.swing.JScrollPane(tree);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1200, 900));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(1200, 900));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Welcome to overSearch! Please choose the directories you want to index for searching");
        jLabel1.setMaximumSize(new java.awt.Dimension(607, 100));
        jLabel1.setMinimumSize(new java.awt.Dimension(607, 100));
        jLabel1.setPreferredSize(new java.awt.Dimension(607, 100));
        jLabel1.setRequestFocusEnabled(false);
        getContentPane().add(jLabel1, java.awt.BorderLayout.PAGE_START);

        PlaceholderRight.setMaximumSize(new java.awt.Dimension(100, 700));

        javax.swing.GroupLayout PlaceholderRightLayout = new javax.swing.GroupLayout(PlaceholderRight);
        PlaceholderRight.setLayout(PlaceholderRightLayout);
        PlaceholderRightLayout.setHorizontalGroup(
            PlaceholderRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        PlaceholderRightLayout.setVerticalGroup(
            PlaceholderRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 401, Short.MAX_VALUE)
        );

        getContentPane().add(PlaceholderRight, java.awt.BorderLayout.LINE_END);

        PlaceholderLeft.setMaximumSize(new java.awt.Dimension(100, 700));

        javax.swing.GroupLayout PlaceholderLeftLayout = new javax.swing.GroupLayout(PlaceholderLeft);
        PlaceholderLeft.setLayout(PlaceholderLeftLayout);
        PlaceholderLeftLayout.setHorizontalGroup(
            PlaceholderLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        PlaceholderLeftLayout.setVerticalGroup(
            PlaceholderLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 401, Short.MAX_VALUE)
        );

        getContentPane().add(PlaceholderLeft, java.awt.BorderLayout.LINE_START);

        PanelBottom.setMaximumSize(new java.awt.Dimension(1200, 100));
        PanelBottom.setMinimumSize(new java.awt.Dimension(800, 100));
        PanelBottom.setPreferredSize(new java.awt.Dimension(1200, 100));
        PanelBottom.setLayout(new java.awt.GridBagLayout());

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton1.setText("confirm");
        PanelBottom.add(jButton1, new java.awt.GridBagConstraints());

        getContentPane().add(PanelBottom, java.awt.BorderLayout.PAGE_END);
        getContentPane().add(DirectoryPane, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void addActionListeners(){
        
        
        /*toSearch.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println("clicked");
                CardLayout card = (CardLayout)(mainPanel.getLayout());
                card.show(mainPanel, "searchScreen");
            }
        });
        
        toStart.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println("clicked");
                CardLayout card = (CardLayout)(mainPanel.getLayout());
                card.show(mainPanel, "startScreen");
            }
        });*/

        /*button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                //code to save paths in index handler and close frame
                ArrayList<String> directoryPaths = listDirectories();
                dispose();
                indexer.indexFiles(directoryPaths);
            }
        });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane DirectoryPane;
    private javax.swing.JPanel PanelBottom;
    private javax.swing.JPanel PlaceholderLeft;
    private javax.swing.JPanel PlaceholderRight;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
