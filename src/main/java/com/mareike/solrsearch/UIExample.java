package com.mareike.solrsearch;

import com.microsoft.graph.models.extensions.User;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author mareike
 */
public class UIExample extends javax.swing.JFrame {

    
    private SolrInstance solr;
    /**
     * Creates new form UIExample
     */
    public UIExample() {
        initComponents();
        createActionListeners();
    }
    
    private void createActionListeners(){
        connectToSolr.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                solr = new SolrInstance("http://localhost:8983/solr", "localDocs2");
                System.out.println("solr instance created");
                System.out.println("with collection name: " + solr.getCollectionName());
                System.out.println("and Solr URL: " + solr.getSolrUrl());
                //something like ping the solr instance to see if it is there?
            }
        });
        
        indexDocuments.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                System.out.println("in Action listener after index handler");
                try{
                    System.out.println("in try");
                    //System.out.println("Index handler is null: " + (solr.handler == null));
                    solr.createIndex();
                    //solr.handler.indexFiles("C:\\Users\\mareike\\Documents\\Studium\\2.Semester-SS16\\Info2");
                } catch(Exception ex){
                    System.out.println(ex.getMessage());
                    
                }
                
            }
        });

        connectWithMicrosoft.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println("in Action listener of ms connection");
                List<User> users = solr.msConnector.getUsers();
                for(User user : users){
                    System.out.println("User found: " + user);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchBar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchResults = new javax.swing.JTextArea();
        solrConnection = new javax.swing.JLabel();
        connectToSolr = new javax.swing.JButton();
        documentsIndexed = new javax.swing.JLabel();
        indexDocuments = new javax.swing.JButton();
        microsoftAccount = new javax.swing.JLabel();
        connectWithMicrosoft = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        searchBar.setText("search");

        searchResults.setColumns(20);
        searchResults.setRows(5);
        jScrollPane1.setViewportView(searchResults);

        solrConnection.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        solrConnection.setText("no connection to Solr");

        connectToSolr.setText("connect to Solr");

        documentsIndexed.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        documentsIndexed.setText("0 documents indexed");

        indexDocuments.setText("index documents");

        microsoftAccount.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        microsoftAccount.setText("no microsoft account detected");

        connectWithMicrosoft.setText("connect with Microsoft");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(connectToSolr)
                            .addComponent(solrConnection))
                        .addGap(191, 191, 191)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(documentsIndexed)
                            .addComponent(indexDocuments))
                        .addGap(235, 235, 235)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(connectWithMicrosoft)
                            .addComponent(microsoftAccount))
                        .addGap(0, 353, Short.MAX_VALUE))
                    .addComponent(searchBar))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(solrConnection)
                    .addComponent(documentsIndexed)
                    .addComponent(microsoftAccount))
                .addGap(94, 94, 94)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connectToSolr)
                    .addComponent(indexDocuments)
                    .addComponent(connectWithMicrosoft))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connectToSolr;
    private javax.swing.JButton connectWithMicrosoft;
    private javax.swing.JLabel documentsIndexed;
    private javax.swing.JButton indexDocuments;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel microsoftAccount;
    private javax.swing.JTextField searchBar;
    private javax.swing.JTextArea searchResults;
    private javax.swing.JLabel solrConnection;
    // End of variables declaration//GEN-END:variables
}
